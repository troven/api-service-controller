---
apiVersion: k8s.a6s.dev/v1
kind: OpenAPI
metadata:
  name: api-service-example
  labels:
    controller: "api-service-controller"
spec:
  paths:
    /example/heartbeat:
      get:
        summary: Health check API 
        feature:
          heartbeat:
            enabled: true
        responses:
         '200':
            description: "200 response"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/heartbeat"

    /example/swagger:
      get:
        summary: OpenAPI catalog
        feature:
          before:
            gregarious:
              headers:
                "X-SWAGGER-BEFORE": true
          after:
          proxy:
            reuseJWT: true
            target: http://localhost:5008/swagger
        # security:
        #   - oauth2_jwt: [ "controller:api" ]
        responses:
         '200':
            description: "200 response"
            content:
              application/json: {}

    /example/healthz:
      get:
        summary: Health check API (proxy)
        feature:
          after:
            gregarious:
              headers:
                X-AFTER: true
          proxy:
            target: http://localhost:5008/healthz
        # security:
        #   - oauth2_jwt: [ "controller:api" ]
        responses:
         '200':
            description: "200 response"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/heartbeat"

    /example/echo:
      get:
        summary: Echo API (proxy)
        feature:
          # jwt_authorize:
          #   claims:
          #     aud: "1234"
          proxy:
            reuseJWT: false
            toProxy: true
            prependPath: true
            ignorePath: true
            secure: false
            target: http://localhost:5008/echo/
        # security:
        #   - oauth2_jwt: [ "controller:api" ]
        responses:
         '200':
            description: "200 response"
            content:
              application/json: {}

    /example/models/:
      get:
        summary: CRUD API
        feature:
          mongodb:
            collection: example
        responses:
         '200':
            description: "200 response"
            content:
              application/json: {}

  components:
    schemas:
        heartbeat:
          type: object
          properties:
            ok:
              type: string
